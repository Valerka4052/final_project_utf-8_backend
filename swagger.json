{
  "openapi": "3.0.3",
  "info": {
    "title": "So_yummy Project ",
    "description": "Team project So_yummy by Swagger OpenAPI 3.0",
    "version": "5.0.0"
  },

  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json", "multipart/form-data"],

  "servers": [
    { "url": "https://final-project-utf-8-backend.onrender.com" },
    { "url": "http://localhost:3001" }
  ],

  "tags": [
    {
      "name": "users",
      "description": "register, login, logout and update some information"
    },
    { "name": "recipes", "description": "Add, delete nad get recipes" },
    { "name": "ingredients", "description": "Add, delete nad get ingredients" },
    { "name": "ownRecipes", "description": "Add, delete nad get recipes" },
    { "name": "favorite", "description": "Add, delete nad get recipes" }
  ],
  "paths": {
    "/users/register": {
      "post": {
        "tags": ["Users"],
        "summary": "User registering",
        "requestBody": {
          "description": "Registration object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "User's email"
                  },
                  "name": {
                    "type": "string",
                    "description": "User's name",
                    "example": "Volodya"
                  },
                  "password": {
                    "type": "string",
                    "description": "User's password",

                    "example": "V4602323"
                  }
                },
                "required": ["email", "name", "password"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "409": {
            "description": "Provided email already exists"
          },
          "400": {
            "description": "Missing fields"
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": ["Users"],
        "summary": "User loginig",
        "requestBody": {
          "description": "Login object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "User's email"
                  },
                  "password": {
                    "type": "string",
                    "description": "User's password",

                    "example": "V4602323"
                  }
                },
                "required": ["email", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User logining successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "401": {
            "description": "Email or password is wrong"
          },
          "400": {
            "description": "Missing fields"
          }
        }
      }
    },
    "/users/logout": {
      "post": {
        "tags": ["Users"],
        "security": [{ "Bearer": [] }],
        "summary": "Logout user",
        "responses": {
          "204": {
            "description": "User logouting successfully"
          },
          "401": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/users/current": {
      "get": {
        "tags": ["Users"],
        "security": [{ "Bearer": [] }],
        "summary": "Get user information ",
        "responses": {
          "200": {
            "description": "Get user information successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/users/update": {
      "patch": {
        "tags": ["Users"],
        "security": [{ "Bearer": [] }],
        "summary": "User update some information",
        "requestBody": {
          "description": "update object",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",

                    "description": "User's name"
                  },
                  "avatarURL": {
                    "type": "string",

                    "description": "User's  avatar",
                    "example": "http://www.gravatar.com/avatar/26ff068050ca831bbff5bcae0cb45723?s=100&r=x&d=wavatar"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": " Successfully",
            "content": {
              "name": {
                "type": "string",

                "description": "User's name"
              },
              "avatarURL": {
                "type": "string",
                "example": "http://www.gravatar.com/avatar/26ff068050ca831bbff5bcae0cb45723?s=100&r=x&d=wavatar",
                "description": "User's  avatar"
              }
            }
          },
          "401": {
            "description": "Email or password is wrong"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AuthResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email"
          },
          "name": {
            "type": "string",
            "description": "User's name"
          },
          "avatarURL": {
            "type": "string",
            "description": "User's temporary avatar"
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
